# Generated by Django 5.0 on 2025-07-09 06:42

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AvailabilitySlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('start_date', models.DateField(verbose_name='Дата начала')),
                ('end_date', models.DateField(verbose_name='Дата окончания')),
                ('is_available', models.BooleanField(default=True, verbose_name='Доступен')),
            ],
            options={
                'verbose_name': 'Слот доступности',
                'verbose_name_plural': 'Слоты доступности',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('name', models.CharField(max_length=255, verbose_name='Название компании')),
                ('inn', models.CharField(blank=True, max_length=12, null=True, unique=True, validators=[django.core.validators.RegexValidator('^\\d{10,12}$', 'Неверный формат ИНН')], verbose_name='ИНН')),
                ('contact_person', models.CharField(max_length=255, verbose_name='Контактное лицо')),
                ('phone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message="Номер телефона должен быть в формате: '+79991234567'", regex='^\\+?1?\\d{9,15}$')], verbose_name='Телефон')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('is_vip', models.BooleanField(default=False, verbose_name='VIP клиент')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Примечания')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('number', models.CharField(max_length=50, unique=True, verbose_name='Номер договора')),
                ('start_date', models.DateField(verbose_name='Дата начала')),
                ('end_date', models.DateField(verbose_name='Дата окончания')),
                ('total_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Общая сумма')),
                ('payment_type', models.CharField(choices=[('full', 'Полная предоплата'), ('partial', 'Частичная предоплата'), ('postpay', 'Постоплата')], default='full', max_length=10, verbose_name='Тип оплаты')),
                ('signed', models.BooleanField(default=False, verbose_name='Подписан')),
                ('signed_date', models.DateField(blank=True, null=True, verbose_name='Дата подписания')),
                ('is_active', models.BooleanField(default=True, verbose_name='Действующий')),
            ],
            options={
                'verbose_name': 'Договор',
                'verbose_name_plural': 'Договоры',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='ContractAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Цена')),
                ('notes', models.TextField(blank=True, verbose_name='Примечания')),
            ],
            options={
                'verbose_name': 'Актив договора',
                'verbose_name_plural': 'Активы договоров',
            },
        ),
        migrations.CreateModel(
            name='Deal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('title', models.CharField(max_length=255, verbose_name='Название сделки')),
                ('status', models.CharField(choices=[('new', 'Новая'), ('in_progress', 'В работе'), ('approval', 'На согласовании'), ('won', 'Успешная'), ('lost', 'Проваленная'), ('archived', 'Архивированная')], default='new', max_length=20, verbose_name='Статус')),
                ('expected_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Ожидаемая сумма')),
                ('probability', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Вероятность успеха (%)')),
                ('closed_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата закрытия')),
            ],
            options={
                'verbose_name': 'Сделка',
                'verbose_name_plural': 'Сделки',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DealTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('description', models.TextField(verbose_name='Описание')),
                ('is_done', models.BooleanField(default=False, verbose_name='Выполнено')),
                ('due_date', models.DateField(verbose_name='Срок выполнения')),
                ('priority', models.CharField(choices=[('low', 'Низкий'), ('medium', 'Средний'), ('high', 'Высокий'), ('critical', 'Критичный')], default='medium', max_length=10, verbose_name='Приоритет')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата выполнения')),
            ],
            options={
                'verbose_name': 'Задача по сделке',
                'verbose_name_plural': 'Задачи по сделкам',
                'ordering': ['-due_date'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Сумма')),
                ('date', models.DateField(verbose_name='Дата платежа')),
                ('payment_method', models.CharField(choices=[('cash', 'Наличные'), ('card', 'Карта'), ('transfer', 'Банковский перевод')], max_length=20, verbose_name='Способ оплаты')),
                ('status', models.CharField(choices=[('pending', 'Ожидает'), ('completed', 'Завершён'), ('failed', 'Неудачный')], default='pending', max_length=20, verbose_name='Статус')),
                ('is_confirmed', models.BooleanField(default=False, verbose_name='Подтвержден')),
                ('confirmation_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата подтверждения')),
                ('notes', models.TextField(blank=True, verbose_name='Примечания')),
                ('transaction_id', models.CharField(blank=True, max_length=100, verbose_name='ID транзакции')),
            ],
            options={
                'verbose_name': 'Платёж',
                'verbose_name_plural': 'Платежи',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('asset_type', models.CharField(choices=[('bus', 'Автобус'), ('bus_stop', 'Остановка'), ('screen', 'Медиаэкран'), ('billboard', 'Билборд'), ('digital', 'Цифровой экран')], max_length=20, verbose_name='Тип актива')),
                ('zone', models.CharField(choices=[('center', 'Центр'), ('north', 'Север'), ('south', 'Юг'), ('east', 'Восток'), ('west', 'Запад')], default='center', max_length=10, verbose_name='Зона')),
                ('location', models.CharField(max_length=255, verbose_name='Местоположение')),
                ('daily_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Дневная ставка')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('notes', models.TextField(blank=True, verbose_name='Примечания')),
            ],
            options={
                'verbose_name': 'Рекламный актив',
                'verbose_name_plural': 'Рекламные активы',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['asset_type'], name='core_asset_asset_t_acc051_idx'), models.Index(fields=['zone'], name='core_asset_zone_c5e581_idx'), models.Index(fields=['is_active'], name='core_asset_is_acti_fb3e86_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='asset',
            constraint=models.UniqueConstraint(fields=('location', 'asset_type'), name='unique_asset_location'),
        ),
        migrations.AddField(
            model_name='availabilityslot',
            name='asset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability_slots', to='core.asset', verbose_name='Актив'),
        ),
        migrations.AddIndex(
            model_name='client',
            index=models.Index(fields=['name'], name='core_client_name_76d9ae_idx'),
        ),
        migrations.AddIndex(
            model_name='client',
            index=models.Index(fields=['inn'], name='core_client_inn_fc0ec5_idx'),
        ),
        migrations.AddIndex(
            model_name='client',
            index=models.Index(fields=['is_vip'], name='core_client_is_vip_174331_idx'),
        ),
        migrations.AddField(
            model_name='contract',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contracts', to='core.client', verbose_name='Клиент'),
        ),
        migrations.AddField(
            model_name='availabilityslot',
            name='reserved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reserved_slots', to='core.contract', verbose_name='Зарезервировано договором'),
        ),
        migrations.AddField(
            model_name='contractasset',
            name='asset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contract_assets', to='core.asset', verbose_name='Актив'),
        ),
        migrations.AddField(
            model_name='contractasset',
            name='contract',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contract_assets', to='core.contract', verbose_name='Договор'),
        ),
        migrations.AddField(
            model_name='contractasset',
            name='slot',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.availabilityslot', verbose_name='Слот доступности'),
        ),
        migrations.AddField(
            model_name='contract',
            name='assets',
            field=models.ManyToManyField(through='core.ContractAsset', to='core.asset', verbose_name='Активы'),
        ),
        migrations.AddField(
            model_name='deal',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='deals', to='core.client', verbose_name='Клиент'),
        ),
        migrations.AddField(
            model_name='deal',
            name='manager',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='deals', to=settings.AUTH_USER_MODEL, verbose_name='Менеджер'),
        ),
        migrations.AddField(
            model_name='contract',
            name='deal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contracts', to='core.deal', verbose_name='Сделка'),
        ),
        migrations.AddField(
            model_name='dealtask',
            name='assigned_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Исполнитель'),
        ),
        migrations.AddField(
            model_name='dealtask',
            name='deal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='core.deal', verbose_name='Сделка'),
        ),
        migrations.AddField(
            model_name='payment',
            name='contract',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='core.contract', verbose_name='Договор'),
        ),
        migrations.AddConstraint(
            model_name='availabilityslot',
            constraint=models.CheckConstraint(check=models.Q(('end_date__gte', models.F('start_date'))), name='check_slot_dates'),
        ),
        migrations.AddConstraint(
            model_name='contractasset',
            constraint=models.UniqueConstraint(fields=('contract', 'asset', 'slot'), name='unique_contract_asset_slot'),
        ),
        migrations.AddIndex(
            model_name='deal',
            index=models.Index(fields=['status'], name='core_deal_status_90c76e_idx'),
        ),
        migrations.AddIndex(
            model_name='deal',
            index=models.Index(fields=['client'], name='core_deal_client__1892f0_idx'),
        ),
        migrations.AddIndex(
            model_name='deal',
            index=models.Index(fields=['manager'], name='core_deal_manager_36bba3_idx'),
        ),
        migrations.AddIndex(
            model_name='deal',
            index=models.Index(fields=['probability'], name='core_deal_probabi_62a5bc_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['number'], name='core_contra_number_e0ebed_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['client'], name='core_contra_client__93eb3b_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['start_date', 'end_date'], name='core_contra_start_d_9283a6_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['is_active'], name='core_contra_is_acti_27fc49_idx'),
        ),
        migrations.AddConstraint(
            model_name='contract',
            constraint=models.CheckConstraint(check=models.Q(('end_date__gte', models.F('start_date'))), name='end_date_after_start_date'),
        ),
        migrations.AddIndex(
            model_name='dealtask',
            index=models.Index(fields=['deal'], name='core_dealta_deal_id_0286a7_idx'),
        ),
        migrations.AddIndex(
            model_name='dealtask',
            index=models.Index(fields=['is_done'], name='core_dealta_is_done_c760a0_idx'),
        ),
        migrations.AddIndex(
            model_name='dealtask',
            index=models.Index(fields=['due_date'], name='core_dealta_due_dat_0fc606_idx'),
        ),
        migrations.AddIndex(
            model_name='dealtask',
            index=models.Index(fields=['priority'], name='core_dealta_priorit_19f5a9_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['contract'], name='core_paymen_contrac_ab820f_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['date'], name='core_paymen_date_122a8b_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['status'], name='core_paymen_status_8390cc_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['is_confirmed'], name='core_paymen_is_conf_a3d5d9_idx'),
        ),
    ]
